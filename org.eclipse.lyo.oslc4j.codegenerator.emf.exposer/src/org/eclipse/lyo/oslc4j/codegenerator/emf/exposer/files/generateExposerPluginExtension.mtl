[comment encoding = UTF-8 /]
[comment
/*******************************************************************************
 * Copyright (c) 2014 THALES GLOBAL SERVICES.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *  
 * Contributors:
 *    
 *    Helleboid Matthieu - initial API and implementation
 *    Anass Radouani 	 - initial API and implementation
 *     
 *******************************************************************************/
/]

[module generateExposerPluginExtension('http://org.eclipse.lyo/oslc4j/adaptorInterface', 'http://org.eclipse.lyo/oslc4j/adaptorInterfaceGenerator')]

[import org::eclipse::lyo::oslc4j::codegenerator::emf::exposer::services::exposerServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::adaptorInterfaceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceProviderCatalogServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceProviderServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::resourceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceServices/]

[comment]Generate the Exposer plugin.xml[/comment]
[template public generateExposerPluginExtension(anAdaptorInterfaceGenerator : AdaptorInterfaceGenerator)]
[file ('/plugin.xml', false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin> 
[for (aServiceProvider : ServiceProvider | anAdaptorInterfaceGenerator.adaptorInterface.serviceProviderCatalog.serviceProviders)]
	<extension
         point="[anAdaptorInterfaceGenerator.corePluginId()/].exposerExtension">
      <exposerExtension
            exposerManager="[javaClassPackageNameForExposerExtensionImpl(anAdaptorInterfaceGenerator)/].[javaClassNameForExposerExtensionImpl(anAdaptorInterfaceGenerator, aServiceProvider)/]"
            serviceProviderClass="[aServiceProvider.javaClassFullNameForService(anAdaptorInterfaceGenerator)/]">
		[for (aResource : Resource | aServiceProvider.services.managedResources())]
         <resourceService
               resourceServiceClass="[aResource.javaClassFullNameForService(aServiceProvider, anAdaptorInterfaceGenerator)/]">
         </resourceService>
		[/for]
		[for (aResource : Resource | aServiceProvider.relevantResources(anAdaptorInterfaceGenerator.adaptorInterface))]
         <resource
               resourceClass="[javaClassPackageName(aResource, anAdaptorInterfaceGenerator).concat('.').concat(javaClassName(aResource))/]">
		 </resource>
		[/for]
      </exposerExtension>
	</extension>
[/for]
</plugin>
[/file]
[/template]
