[comment encoding = UTF-8 /]
[comment
/*******************************************************************************
 * Copyright (c) 2014 Jad El-khoury.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *     Matthieu Helleboid   - Create an Adaptor Service Provider Factory for each service provider.
 *                          - Create a Resource Service for each managing Service Provider
 *                          - Create a Specific Resource for managing Service Provider when its service namespace is relative to the Service Provider				
 *     Anass Radouani       - Create an Adaptor Service Provider Factory for each service provider.
 *                          - Create a Resource Service for each managing Service Provider
 *                          - Create a Specific Resource for managing Service Provider when its service namespace is relative to the Service Provider				
 *******************************************************************************/
/]

[module generate('http://org.eclipse.lyo/oslc4j/adaptorInterface')]

[import org::eclipse::lyo::oslc4j::codegenerator::services::services/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::resourceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::resourcePropertyServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::adaptorInterfaceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceProviderServices/]

[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderCatalogService/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderCatalogSingleton/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorServiceProviderFactory/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorManager/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorServletListener/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateDelegatedUIJavaScripts/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorApplication/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorPackageInfo/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateAdaptorConstants/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderCatalogHTML/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderHTML/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderService/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateServiceProviderInfo/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateResource/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateResourceForSP/]
[import org::eclipse::lyo::oslc4j::codegenerator::files::generateResourceService/]
[import org::eclipse::lyo::oslc4j::codegenerator::staticFiles::generateLicenseFiles/]

[template public generate(anAdaptorInterface : AdaptorInterface)]
[comment @main/]

[comment TODO: Produce "package-info.java" under the Resources package. See the original instructions on how to setup a OSLC4J project for details./]
[anAdaptorInterface.serviceProviderCatalog.generateServiceProviderCatalogService() /]
[anAdaptorInterface.serviceProviderCatalog.generateServiceProviderCatalogSingleton() /]

[anAdaptorInterface.generateLicenseFiles() /]
[anAdaptorInterface.generateAdaptorApplication() /]
[anAdaptorInterface.generateAdaptorPackageInfo() /]
[anAdaptorInterface.generateAdaptorServletListener() /]
[anAdaptorInterface.generateAdaptorManager() /]
[anAdaptorInterface.generateAdaptorConstants() /]
[anAdaptorInterface.generateDelegatedUIJavaScripts() /]

[anAdaptorInterface.serviceProviderCatalog.generateServiceProviderCatalogHTML() /]

[for (aResource: Resource | relevantResources(anAdaptorInterface))]
	[aResource.generateResource(anAdaptorInterface) /]
[/for]



[for (aServiceProvider: ServiceProvider | anAdaptorInterface.serviceProviderCatalog.serviceProviders)]

	[for (aResource: Resource | aServiceProvider.services.managedResources())]
		[aResource.generateResourceService(anAdaptorInterface, aServiceProvider) /]
		[if (aResource.serviceNamespaceRelativeToServiceProvider(aServiceProvider))]
		[aResource.generateResourceForSP(anAdaptorInterface, aServiceProvider)/]
		[/if]
	[/for]

	[aServiceProvider.generateAdaptorServiceProviderFactory(anAdaptorInterface) /]
	[aServiceProvider.generateServiceProviderService(anAdaptorInterface)/]
	[aServiceProvider.generateServiceProviderHTML(anAdaptorInterface) /]
[aServiceProvider.generateServiceProviderInfo(anAdaptorInterface) /]

[/for]

[/template]
