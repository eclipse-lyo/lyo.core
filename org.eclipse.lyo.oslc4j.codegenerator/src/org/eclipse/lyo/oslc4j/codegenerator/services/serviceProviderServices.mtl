[comment encoding = UTF-8 /]
[comment
/*******************************************************************************
 * Copyright (c) 2014 Jad El-khoury.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *     
 *******************************************************************************/
/]

[module serviceProviderServices('org.eclipse.lyo.oslc4j.adaptorInterface')/]

[import org::eclipse::lyo::oslc4j::codegenerator::services::services/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::adaptorInterfaceServices/]

[comment Services for serviceProviderService /]
[query public javaClassPackageNameForService(aServiceProvider : ServiceProvider) : String = 
javaClassBaseNamespace(containingAdaptorInterface(aServiceProvider)).concat('.services')
/]

[query public javaClassNameForService(aServiceProvider : ServiceProvider) : String = 
'ServiceProviderService'
/]

[query public javaClassFullNameForService(aServiceProvider : ServiceProvider) : String = 
javaClassPackageNameForService(aServiceProvider).concat('.').concat(javaClassNameForService(aServiceProvider))
/]

[query public javaClassFullFileNameForService(aServiceProvider : ServiceProvider) : String = 
javaFilesBasePath(containingAdaptorInterface(aServiceProvider)).concat(javaClassPackageNameForService(aServiceProvider).substituteAll('.', '/')).concat('/').concat(javaClassNameForService(aServiceProvider)).concat('.java')
/]

